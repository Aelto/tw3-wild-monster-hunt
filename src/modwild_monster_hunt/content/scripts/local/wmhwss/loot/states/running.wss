state Running in WMH_LootManager {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    this.Running_main();
  }

  entry function Running_main() {
    WMHINFO("WMH_LootManagerStateRunning:Running_main(), loot_requests count = " + parent.loot_requests.Size());

    while (parent.loot_requests.Size() > 0) {
      var request: WMH_LootRequest = parent.loot_requests.PopBack();

      this.addLoot(request);
      SleepOneFrame();
    }

    parent.GotoState('Waiting');
  }

  private function addLoot(out request: WMH_LootRequest) {
    // a small chance decrease as difficulty increases
    var tags_count: int = request.tags.Size();
    var max_chance: float = WMH_difficultyScaleDownF(
      // 1 tag  = 10% chance for the first item's roll
      // 2 tags = 40%
      // 3 tags = 90%
      tags_count * tags_count * 0.1,
      0.1
    );

    // challenge extration: increases all loot amount by a given amount.
    max_chance = WMH_extractionChallengeMultiplier(max_chance, 2.0, 1.0);

    var items_count: int = 0;
    var i: int;
    for (i = 0; i < tags_count; i += 1) {
      var can_add: bool = RandNoiseF(request.seed + i, 1.0)
                        <= max_chance - items_count * 0.35;

      if (can_add) {
        var category: WMH_LootTag = request.tags[i];

        if (parent.loot_by_category.Size() > (category as int)) {
          this.addRandomItemFromCategory(
            request.inventory,
            category,
            request.seed + i
          );

          items_count += 1;
        }
      }
    }

    if (request.runes_of_power_chance > 0.0) {
      var can_add: bool = RandNoiseF(request.seed + 10, 1.0)
                        <= request.runes_of_power_chance;

      if (can_add) {
        parent.giveRandomRuneOfPower(
          request.inventory,
          request.seed
        );
      }
    }
  }

  private function addRandomItemFromCategory(
    inventory: CInventoryComponent,
    category: WMH_LootTag,
    seed: int
  ) {
    var item: name = parent.getRandomItem(category, seed);

    if (IsNameValid(item)) {
      inventory.AddAnItem(item, 1);
    }
  }
}