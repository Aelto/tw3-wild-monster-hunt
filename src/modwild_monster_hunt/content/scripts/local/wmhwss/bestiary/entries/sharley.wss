class WMH_BestiaryEntrySharley extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "dlc\bob\data\characters\npc_entities\monsters\sharley.w2ent",,
        "dlc\bob\journal\bestiary\ep2sharley.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "dlc\bob\data\characters\npc_entities\monsters\sharley_mh.w2ent",,
        "dlc\bob\journal\bestiary\ep2sharley.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "dlc\bob\data\characters\npc_entities\monsters\sharley_q701.w2ent",,
        "dlc\bob\journal\bestiary\ep2sharley.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "dlc\bob\data\characters\npc_entities\monsters\sharley_q701_normal_scale.w2ent",,
        "dlc\bob\journal\bestiary\ep2sharley.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 1;

    this.strength = 25;
    this.biome_tag_bypass = 'Sharley';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      if (!underground || !wide || vegetation) nospawn
      else += 1.0,
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKeyExt("wmh_shaelmaar");
  }

    public function onContractCompleted(
    provider: WMH_RewardProvider,
    out contract: WMH_Contract,
    seed: int
  ) {
    super.onContractCompleted(provider, contract, seed);

    provider.appendItem('Lead ore', (RandNoiseF(seed + 1, 4.0) as int));
    provider.appendItem('Dark iron ore', (RandNoiseF(seed + 8, 4.0) as int));
    provider.appendItem('Iron ore', (RandNoiseF(seed + 3, 4.0) as int));
    provider.appendItem('Silver ore', (RandNoiseF(seed + 7, 4.0) as int));
    
    provider.appendItem('Gold ore', (RandNoiseF(seed + 2, 2.0) as int));
    provider.appendItem('Glowing ore', (RandNoiseF(seed + 5, 2.0) as int));
    provider.appendItem('Meteorite ore', (RandNoiseF(seed + 4, 2.0) as int));
    provider.appendItem('Dwimeryte ore', (RandNoiseF(seed + 6, 2.0) as int));
  }
}
