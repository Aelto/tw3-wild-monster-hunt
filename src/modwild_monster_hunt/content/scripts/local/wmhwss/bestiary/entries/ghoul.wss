class WMH_BestiaryEntryGhoul extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\ghoul_lvl1.w2ent",,
        "gameplay\journal\bestiary\bestiaryghoul.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\ghoul_lvl2.w2ent",,
        "gameplay\journal\bestiary\bestiaryghoul.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\ghoul_lvl3.w2ent",,
        "gameplay\journal\bestiary\bestiaryghoul.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 2;
    this.difficulty_scaling.maximum_count_easy = 3;
    this.difficulty_scaling.minimum_count_medium = 3;
    this.difficulty_scaling.maximum_count_medium = 4;
    this.difficulty_scaling.minimum_count_hard = 3;
    this.difficulty_scaling.maximum_count_hard = 5;

    this.strength = 2.5;
    this.biome_tag_bypass = 'Ghoul';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      morning {
        if (underground) += 1.0,
        if (lightlow) += 0.2,
        if (structures) += 0.2,

        if (rain) *= 2.0,
      }

      afternoon {
        if (underground || rain) += 1.0,
        if (lightlow && (vegetation || structures)) += 0.2,
        if (structures) += 0.2,
      }

      night {
        if (structures) += 3.0,
        if (vegetation) += 0.2,
        if (lightlow) += 0.1,
        if (rain) *= 1.2,
      }
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKeyExt("wmh_ghoul");
  }
}
