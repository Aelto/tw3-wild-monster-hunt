

// function WMH_grantPerksFromEquippedItems() {
//   var witcher: W3PlayerWitcher = GetWitcherPlayer();

//   var items: array<SItemUniqueId> = witcher.GetEquippedItems();
//   var inventory: CInventoryComponent = thePlayer.GetInventory();
//   var perks: array<ESkill>;

//   for item: SItemUniqueId in items {
//     WMH_itemToSkills(item, inventory, /*out*/ perks);
//   }

//   for perk: ESkill in perks {
//     WMH_DECO_addDecorationPerk(perk);
//   }
// }

// function WMH_DECO_addDecorationPerk(skill: ESkill) {
//   var is_temporary: bool = true;

//   thePlayer.AddSkill(skill, is_temporary);
// }

// function WMH_itemToSkills(
//   item: SItemUniqueId,
//   inventory: CInventoryComponent,

//   out skills: array<ESkill>
// ){

//   var enhancements: array<name>;
//   inventory.GetItemEnhancementItems(item, enhancements);

//   for enhancement: name in enhancements {
//     var rune: SItemUniqueId = inventory.GetItemId(enhancement);
//     var tags: array<name>;

//     tags.Clear();
//     if (!inventory.GetItemTags(item, tags)) {
//       continue;
//     }

//     for tag: name in tags {
//       var skill: ESkill = SkillNameToEnum(tag);

//       if (skill  == S_SUndefined) {
//         continue;
//       }

//       skills.PushBack(skill);
//     }
//   }
// }

// function WMH_getItemDecorationSeed(
//   inventory: CInventoryComponent,
//   item: SItemUniqueId
// ): int {
//   return inventory.GetItemModifierInt(item, 'wmh_decoration_seed');
// }

// function WMH_setItemDecorationSeed(
//   inventory: CInventoryComponent,
//   item: SItemUniqueId,
//   seed: int
// ) {
//   inventory.SetItemModifierInt(item, 'wmh_decoration_seed', seed);
// }

// function WMH_getItemDecorationCount(
//   inventory: CInventoryComponent,
//   item: SItemUniqueId
// ): int {
  
//   return Max(
//     inventory.GetItemModifierInt(item, 'wmh_decoration_count', 0),
//     0
//   );
// }

// function WMH_setItemDecorationCount(
//   inventory: CInventoryComponent,
//   item: SItemUniqueId,
//   count: int
// ) {
//   inventory.SetItemModifierInt(item, 'wmh_decoration_count', count);
// }

// function WMH_getItemDecorationLevel(
//   inventory: CInventoryComponent,
//   item: SItemUniqueId
// ): int {
//   return Max(
//     inventory.GetItemModifierInt(item, 'wmh_decoration_level', 1),
//     1
//   );
// }