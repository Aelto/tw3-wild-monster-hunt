

class WMH_MilestoneContract extends WMH_PendingContract {
  default encounter_tag = WMH_EncounterTag_ContractMilestone;

  private var milestone_level: WMH_Level;

  public function initMilestoneContract(
    bestiary: WMH_Bestiary,
    contract: WMH_Contract
  ): WMH_MilestoneContract {
    this.affix_manager = new WMH_AffixManager in this;
    this.contract = contract;
    this.milestone_level = WMH_Level(
      contract.level.value / WMH_getContractManager().milestoneContractsInterval()
    );

    this.initFromMilestoneLevel(bestiary, this.milestone_level);

    return this;
  }

  public function isContractExpired(): bool {
    var current: WMH_Level = WMH_storageContractGetMilestoneLevel();

    // the milestone contract was already completed for this level, it may be a
    // duplicate so mark it as expired.
    return this.milestone_level.value <= current.value;
  }

  public function getContractSeed(optional offset: int): int {
    return super.getContractSeed(offset)
         - (this.milestone_level.value as int);
  }

  public function toTargetLocNameHtml(): string {
    return "<font color='#FFEE8C'>" + super.toTargetLocNameHtml() + "</font>";
  }

  public function getType(): WMH_PendingContractType {
    return WMH_PendingContractType_MILESTONE;
  }

  public function onContractCompleted(provider: WMH_RewardProvider) {
    super.onContractCompleted(provider);

    // additional experience on top of the XP of a regular contract, but this
    // one is a % of the needed experience for the next level.
    //
    // This should help combat mods that tweak the XP curve using an exponential
    // curve.
    provider.appendExperience(
      RoundF((GetWitcherPlayer().GetMissingExpForNextLevel() as float) * 0.30)
    );

    WMHINFO(
      "WMH_MilestoneContract::onContractCompleted(), level = "
      + this.milestone_level.value
    );

    WMH_storageContractSetMilestoneLevel(this.milestone_level);
    WMH_getLootManager()
      .onMilestoneContractCompleted(this.getContractSeed());
  }

  private function initFromMilestoneLevel(
    bestiary: WMH_Bestiary, 
    milestone_level: WMH_Level
  ) {

    switch (milestone_level.value) {
      case 0:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Drowner'
          )
        );
        this.affix_manager.health_modifier = 1.5;
        break;

      case 1:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Ghoul'
          )
        );
        this.affix_manager.damage_modifier = 1.3;
        break;

      case 2:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Nekker'
          )
        );
        this.affix_manager.damage_modifier = 1.25;
        this.affix_manager.health_modifier = 1.5;
        break;

      case 3:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Bear'
          )
        );
        this.affix_manager.health_regen_percent = 0.1;
        break;

      case 4:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Wolf'
          )
        );
        this.affix_manager.health_regen_percent = 0.1;
        this.affix_manager.damage_modifier = 1.2;
        break;

      case 5:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Alghoul'
          )
        );
        this.affix_manager.lifesteal_percent = 0.5;
        break;

      case 6:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Rotfiend'
          )
        );
        this.affix_manager.health_regen_percent = 0.2;
        this.affix_manager.health_modifier = 1.75;
        break;

      case 7:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Nekker'
          )
        );
        this.affix_manager.lifesteal_percent = 0.5;
        this.affix_manager.health_modifier = 2.0;
        break;

      case 8:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Endrega'
          )
        );
        this.affix_manager.armor_modifier = 0.5;
        this.affix_manager.health_modifier = 1.5;
        break;

      case 9:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Bear'
          )
        );
        this.affix_manager.armor_modifier = 1.5;
        this.affix_manager.lifesteal_percent = 0.75;
        break;

      case 10:
        this.targets.PushBack(
          (new WMH_ContractTarget in this).initTagBypass(
            this.getContractSeed(),
            'Fogling'
          )
        );
        this.affix_manager.health_modifier = 2.0;
        this.affix_manager.health_regen_percent = 0.4;
        break;

    }

    this.milestone_level = milestone_level;
  }
}