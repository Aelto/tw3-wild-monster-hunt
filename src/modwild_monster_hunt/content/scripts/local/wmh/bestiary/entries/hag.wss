class WMH_BestiaryEntryHag extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\hag_grave_lvl1.w2ent",,
        "gameplay\journal\bestiary\gravehag.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\hag_water_lvl1.w2ent",,
        "gameplay\journal\bestiary\waterhag.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\hag_water_lvl2.w2ent",,
        "gameplay\journal\bestiary\waterhag.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\hag_water_mh.w2ent",,
        "gameplay\journal\bestiary\bestiarymonsterhuntmh203.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 1;

    this.strength = 4;
    this.biome_tag_bypass = 'Hag';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    // Like drowners, with whom they often share hunting grounds, water hags and
    // swamp bints dwell near shallow streams, rivers and wetlands.
    //
    // Water hags are particularly active and dangerous during rainstorms
    pref_time!({{
      if (altitude || underground) nospawn

      if (humidity) += 1.0,
      if (rain) += 0.5,

      morning {
        if (structures) *= 1.5,
      }

      afternoon {
        if (wide) *= 1.5,
      }

      night {
        if (vegetation) *= 1.5,
      }
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKey("wmh_hag");
  }

  public function onContractCompleted(
    provider: WMH_RewardProvider,
    out contract: WMH_Contract,
    seed: int
  ) {
    super.onContractCompleted(provider, contract, seed);
    provider.appendItem('Calcium equum', (RandNoiseF(seed, 2.0) as int) + 1);
  }
}
