class WMH_LifestealEffect extends WMH_Effect {
  default tag = 'WMH_LifestealEffect';

  public function initLifesteal(duration: float): WMH_LifestealEffect {
    this.init(duration);

    return this;
  }

  public function getModifier(): float {
    return this.intensity;
  }
}

@wrapMethod(W3PlayerWitcher)
function OnTakeDamage(action: W3DamageAction) {
  var result: bool = wrappedMethod(action);

  if (!action.DealtDamage() || action.WasDodged() || action.IsDoTDamage()) {
    return result;
  }

  var attacker: CActor = action.attacker as CActor;  

  if (attacker) {
    var effects: array<WMH_Effect> = attacker.WMH_getEffectsByTag('WMH_LifestealEffect');

    if (effects.Size() <= 0) {
      return result;
    }

    var damage_amount: float = action.GetDamageDealt();
    var total: float = 1.0;

    for effect: WMH_Effect in effects {
      var lifesteal: WMH_LifestealEffect = effect as WMH_LifestealEffect;

      if (lifesteal) {
        total *= lifesteal.getModifier();
      }
    }

    attacker.Heal((total * damage_amount) as int);
  }
}