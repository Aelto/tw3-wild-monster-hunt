{
  // Place your wss workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "state": {
    "prefix": "state",
    "body": [
      "state $1 in $2 {",
      "  event OnEnterState(previous_state_name: name) {",
      "    super.OnEnterState(previous_state_name);",
      "    this.$1_main();",
      "  }",
      "",
      "  entry function $1_main() {$3}",
      "}"
    ]
  },
  "onInteraction": {
    "prefix": "event onInteraction",
    "body": [
      "event OnInteraction(actionName: string, activator: CEntity) {}"
    ]
  },
  "onSpawned": {
    "prefix": "event onSpawned",
    "body": [
      "event OnSpawned(spawnData: SEntitySpawnData) {}"
    ]
  },
  "pushback": {
    "prefix": "push",
    "body": [
      "PushBack(${1:item});"
    ]
  },
  "loc": {
    "prefix": "loc",
    "body": [
      "GetLocStringByKeyExt(\"$1\")"
    ]
  },
  "cloc": {
    "prefix": "cloc",
    "body": [
      "GetLocStringByKeyExt(\"$CLIPBOARD\")"
    ]
  },
  "strreplace": {
    "prefix": "strlocreplace",
    "body": [
      "StrReplace(",
      "  $TM_SELECTED_TEXT,",
      "  \"{{$1}}\",",
      "  $2",
      ")"
    ]
  }
}