/// Provides a lock mechanism that can only be used once per hunt.
/// struct based variant so no initialization has to be performed
struct WMH_HuntLock {
  var hunt_seed: int;
  default hunt_seed = -1;
}

function WMH_huntLockTryUse(out data: WMH_HuntLock): bool {
  var seed: int = WMH_getHuntSeedFact();

  if (WMH_huntLockIsAvailable(data, seed)) {
    data.hunt_seed = seed;
    return true;
  }

  return false;
}

function WMH_huntLockIsAvailable(out data: WMH_HuntLock, optional seed: int): bool {
  if (seed < 0) {
    seed = WMH_getHuntSeedFact();
  }

  return data.hunt_seed < 0 || data.hunt_seed != seed;
}