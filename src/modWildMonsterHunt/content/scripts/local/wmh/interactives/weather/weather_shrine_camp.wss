/// Alternative WeatherShrine that sits in the Witcher camp, it acts as a
/// starting point for quick-start fast travel.
statemachine class WMH_WeatherShrineCamp extends CGameplayEntity {
  event OnInteraction(actionName: string, activator: CEntity) {
    
    // var entities: array<CEntity>;
    // theGame.GetEntitiesByTag('WMH_WeatherShrine', entities);
    // var count: int = 0;
    // for entity: CEntity in entities {
    //   var shrine: WMH_WeatherShrine = entity as WMH_WeatherShrine;

    //   if (count >= 3) {
    //     break;
    //   }

    //   if (shrine) {
    //     WMH_toggleQuickStartLocation(shrine.quickstart_options, true);
    //     count += 1;
    //   }
    // }
    // WMH_updateMerchantGoodsFact(20);
    // thePlayer.AddMoney(100);

    var activated_locations: array<WMH_QuickStartLocationOptions>;
    activated_locations = WMH_getStorageQuickStartActivatedLocations();

    if (activated_locations.Size() <= 0) {
      WMHHUD("You do not have any active Quick-Start location");
      return false;
    }

    this.GotoState('StartDialogChoice');
  }

  event OnInteractionActivationTest(
    interactionComponentName: string,
    activator: CEntity
  ) {
    this.displayTutorial();



    return true;
  }

  private function displayTutorial() {
    WMHTUTOFACT(
      'WMH_WeatherShrineCamp',
      "Quick-Start Locations",
      "As you'll explore the surroundings, you will discover <font color='#CD7D03'>Weather Shrines</font> that can act as <font color='#CD7D03'>Quick-Start locations</font>."
      + "<br/><br/>"
      + "From here in the Witcher Camp, you can start your hunts at any <font color='#CD7D03'>Active</font> shrine that you have. Using a quick-start location requires a few crowns, and mostly <font color='#CD7D03'>Merchant Goods</font> as an upkeep fee for all the shrines that are currently active."
      + "<br/><br/>"
      + "<i>Merchants Goods are found during your hunts and must be brought back to the camp</i>"
    );
  }
}

state Waiting in WMH_WeatherShrineCamp {}

state StartDialogChoice in WMH_WeatherShrineCamp {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    parent.GotoState('DialogChoice');
  }
}

state DialogChoice in WMH_WeatherShrineCamp {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    this.DialogChoice_main();
  }

  entry function DialogChoice_main() {
    var used: bool = WMH_displayQuickStartLocationChoice();
    WMHPOPUP("", 1);

    parent.GotoState('Waiting');
  }
}