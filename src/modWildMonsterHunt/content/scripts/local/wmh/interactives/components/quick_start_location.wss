struct WMH_QuickStartLocationOptions {
  editable var location_tag: name;
  hint location_tag = "tag of the entity to use as a quick-start location";

  editable var fee_upkeep_modifier: float;
  default fee_upkeep_modifier = 1.0;
  hint fee_upkeep_modifier = "modifier for how much the upkeep fee is for this location. The upkeep fee is applied when the hunt ends and if at least one contract is completed.";

  editable var fee_use_modifier: float;
  default fee_use_modifier = 1.0;
  hint fee_use_modifier = "modifier for how much the on-use cost is for this location.";
}

function WMH_getQuickStartTotalUpkeepCost(): float {
  var locations: array<WMH_QuickStartLocationOptions>;
  locations = WMH_getStorageQuickStartActivatedLocations();

  var total_cost: float = 0;
  for location: WMH_QuickStartLocationOptions in locations {
    total_cost += location.fee_upkeep_modifier;
  }

  return total_cost;
}