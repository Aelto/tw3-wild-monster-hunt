statemachine class WMH_ReturnToCampEntity extends CGameplayEntity {
  private var prompt: WMH_ReturnToCampYesNoPrompt;
  private var prompt_wo: WMH_ReturnToCampYesNoWhiteOrchardPrompt;

  private editable var offer_travel_to_prolog: bool;

  event OnInteraction(actionName: string, activator: CEntity) {
    this.GotoState('Waiting');
    if (!thePlayer.IsActionAllowed( EIAB_OpenMap )) {
      thePlayer.DisplayActionDisallowedHudMessage(EIAB_OpenMap);
    }
    else {
      if (this.offer_travel_to_prolog) {
        this.prompt_wo = new WMH_ReturnToCampYesNoWhiteOrchardPrompt in this;
        prompt.entity = this;
        prompt.display();
      }
      else {
        this.prompt = new WMH_ReturnToCampYesNoPrompt in this;
        prompt.entity = this;
        prompt.display();
      }
    }
  }
}

state Waiting in WMH_ReturnToCampEntity {}

state FastTravel in WMH_ReturnToCampEntity {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    this.FastTravel_main();
  }

  entry function FastTravel_main() {
    WMH_fastTravelToCamp();
  }
}

state FastTravelWhiteOrchard in WMH_ReturnToCampEntity {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    this.FastTravel_main();
  }

  entry function FastTravel_main() {
    WMH_fastTravelToWhiteOrchard();
  }
}

class WMH_ReturnToCampYesNoPrompt extends WMH_YesNoPrompt {
  var entity: WMH_ReturnToCampEntity;

  public function title(): string {
    if (WMH_isInWmhLevel()) {
      return "Return to camp";
    }

    return "Enter Wild Monster Hunt";
  }

  public function description(): string {
    if (WMH_isInWmhLevel()) {
      return "Fast travel back to camp?";
    }

    return "Fast travel to the camp?";
  }

  public function onResponse(accepted: bool) {
    if (accepted) {
      this.entity.GotoState('FastTravel');
    }
  }
}

class WMH_ReturnToCampYesNoWhiteOrchardPrompt extends WMH_YesNoPrompt {
  var entity: WMH_ReturnToCampEntity;

  public function title(): string {
    return "Leave Wild Monster Hunt";
  }

  public function description(): string {
    return "Fast travel to White Orchard?";
  }

  public function onResponse(accepted: bool) {
    if (accepted) {
      this.entity.GotoState('FastTravelWhiteOrchard');
    }
  }
}

function WMH_teleportToFeintRespawn() {
  var destination: CEntity = theGame.GetEntityByTag('WMH_FeintRespawn');

  if (destination) {
    thePlayer.TeleportWithRotation(
      destination.GetWorldPosition(),
      destination.GetWorldRotation()
    );
  }
}

latent function WMH_fastTravelToCamp() {
  if (WMH_isInWmhLevel()) {
    theGame.FadeOut(0.5);
    WMH_teleportToFeintRespawn();
    theGame.FadeInAsync(1.0);
  }
  else {
    WMH_addOutsiderFact();

    theGame.ScheduleWorldChangeToPosition(
      "levels\wmh_lv1\wmh_lv1.w2w",
      Vector(744.57,701.20,105.00),
      EulerAngles(0, 0, 0)
    );
  }
}

function WMH_fastTravelToWhiteOrchard() {
  theGame.ScheduleWorldChangeToPosition(
    "levels\prolog_village\prolog_village.w2w",
    Vector(515.41,77.47,32.12),
    EulerAngles(0, 0, 90.0)
  );
}