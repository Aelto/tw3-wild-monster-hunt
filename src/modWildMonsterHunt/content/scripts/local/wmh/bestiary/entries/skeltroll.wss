class WMH_BestiaryEntrySkeltroll extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\troll_cave_lvl3__ice.w2ent",,
        "gameplay\journal\bestiary\icetroll.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\troll_cave_lvl4__ice.w2ent",,
        "gameplay\journal\bestiary\icetroll.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\troll_ice_lvl13.w2ent",,
        "gameplay\journal\bestiary\icetroll.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 3;

    this.strength = 5;
    this.biome_tag_bypass = 'Skeltroll';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      if (altitude) += 0.3,
      if (structures) += 0.3,
      if (humidity) += 0.1,
      if (vegetation) += 0.1,

      morning *= 1.5,
      afternoon *= 2.0,

      night {
        if (underground) += 1.0,
        if (underground && wide) += 1.0,
      }
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKey("wmh__skelligetroll");
  }

  public function onContractCompleted(
    provider: WMH_RewardProvider,
    out contract: WMH_Contract,
    seed: int
  ) {
    super.onContractCompleted(provider, contract, seed);
    provider.appendItem('Sulfur', (RandNoiseF(seed, 2.0) as int) + 1);
  }
}
