class WMH_BestiaryEntryDrowner extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\drowner_lvl1.w2ent",,
        "gameplay\journal\bestiary\drowner.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\drowner_lvl2.w2ent",,
        "gameplay\journal\bestiary\drowner.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\drowner_lvl3.w2ent",,
        "gameplay\journal\bestiary\drowner.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\drowner_lvl4__dead.w2ent", 2,
        "gameplay\journal\bestiary\drowner.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 2;
    this.difficulty_scaling.maximum_count_easy = 3;
    this.difficulty_scaling.minimum_count_medium = 3;
    this.difficulty_scaling.maximum_count_medium = 4;
    this.difficulty_scaling.minimum_count_hard = 4;
    this.difficulty_scaling.maximum_count_hard = 5;

    this.biome_tag_bypass = 'Drowner';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      if (altitude) nospawn
      if (underground && !humidity) nospawn

      if (humidity) += 1.0,
      if (rain) += 0.5,

      morning {
        if (structures) *= 1.5,
      }

      afternoon {
        if (wide) *= 1.5,
      }

      night {
        if (vegetation) *= 1.5,
      }
    }});
  }
}
