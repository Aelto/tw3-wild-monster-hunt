class WMH_BestiaryEntryGryphon extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\gryphon_lvl1.w2ent",,
        "gameplay\journal\bestiary\griffin.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\gryphon_lvl2.w2ent",,
        "gameplay\journal\bestiary\griffin.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\gryphon_lvl3__volcanic.w2ent",,
        "gameplay\journal\bestiary\bestiarymonsterhuntmh301.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\gryphon_mh__volcanic.w2ent",,
        "gameplay\journal\bestiary\bestiarymonsterhuntmh301.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 1;

    this.biome_tag_bypass = 'Gryphon';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {

    pref_rule!({{
      if rain && humidity && vegetation && !underground
        => 1.5, 1.5, 1.5;

      if rain && vegetation && !underground
        => 1.0, 1.0, 1.0;

      if vegetation && humidity && !underground
        => 1.0, 1.0, 1.0;

      if vegetation || humidity && !underground
        => 0.5, 0.5, 0.5;

      if underground && wide
        => 0.0, 0.0, 1.0;
    }})

    return 0;
  }

  public function getLocName(): string {
    return "Gryphon";
  }
}
