class WMH_BestiaryEntryWerewolf extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\werewolf_lvl1.w2ent",,
        "gameplay\journal\bestiary\bestiarywerewolf.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\werewolf_lvl2.w2ent",,
        "gameplay\journal\bestiary\bestiarywerewolf.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\werewolf_lvl3__lycan.w2ent",,
        "gameplay\journal\bestiary\lycanthrope.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\werewolf_lvl4__lycan.w2ent",,
        "gameplay\journal\bestiary\lycanthrope.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\werewolf_lvl5__lycan.w2ent",,
        "gameplay\journal\bestiary\lycanthrope.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\_quest__werewolf.w2ent",,
        "gameplay\journal\bestiary\bestiarywerewolf.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\_quest__werewolf_01.w2ent",,
        "gameplay\journal\bestiary\bestiarywerewolf.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\_quest__werewolf_02.w2ent",,
        "gameplay\journal\bestiary\bestiarywerewolf.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 1;

    this.biome_tag_bypass = 'Werewolf';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      morning nospawn
      afternoon nospawn
      if (underground) nospawn

      night {
        if (vegetation) += 0.3,
        if (structures) += 0.3,
        if (humidity) += 0.1,
        if (lightlow) += 0.1,

        if (!clear) *= 1.5,
      }
    }});
  }

  public function getLocName(): string {
    return "Werewolf";
  }
}
