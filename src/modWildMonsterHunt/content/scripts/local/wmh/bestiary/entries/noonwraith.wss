#define const NoonWraithStrength = 6;

class WMH_BestiaryEntryNoonwraith extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\noonwraith_lvl1.w2ent",,
        "gameplay\journal\bestiary\bestiarynoonwright.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\noonwraith_lvl2.w2ent",,
        "gameplay\journal\bestiary\bestiarynoonwright.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\noonwraith_lvl3.w2ent",,
        "gameplay\journal\bestiary\bestiarynoonwright.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\_quest__noonwright_pesta.w2ent",,
        "gameplay\journal\bestiary\bestiarynoonwright.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 1;
    this.difficulty_scaling.minimum_count_medium = 1;
    this.difficulty_scaling.maximum_count_medium = 1;
    this.difficulty_scaling.minimum_count_hard = 1;
    this.difficulty_scaling.maximum_count_hard = 1;

    this.strength = NoonWraithStrength!;
    this.biome_tag_bypass = 'Noonwraith';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      if (underground) nospawn
      
      morning {
        if (structures) += 0.5,
      }

      afternoon {
        if (structures) += 1.0,
        if (structures && altitude) += 0.25,
      }

      if (clear) *= 1.5,
      else *= 0.1,
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKey("wmh_noonwraith");
  }
}
