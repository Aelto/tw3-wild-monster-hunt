class WMH_BestiaryEntryRotfiend extends WMH_BestiaryEntry {
  public function init(id: WMH_BestiaryId) {
    super.init(id);

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\rotfiend_lvl1.w2ent",,
        "gameplay\journal\bestiary\bestiarygreaterrotfiend.journal"
      )
    );

    this.templates.PushBack(
      WMH_EnemyTemplate(
        "characters\npc_entities\monsters\rotfiend_lvl2.w2ent",1,
        "gameplay\journal\bestiary\bestiarygreaterrotfiend.journal"
      )
    );

    this.difficulty_scaling.minimum_count_easy = 1;
    this.difficulty_scaling.maximum_count_easy = 3;
    this.difficulty_scaling.minimum_count_medium = 2;
    this.difficulty_scaling.maximum_count_medium = 4;
    this.difficulty_scaling.minimum_count_hard = 3;
    this.difficulty_scaling.maximum_count_hard = 6;

    this.strength = 2.75;
    this.biome_tag_bypass = 'Rotfiend';
  }

  public function getSpawnRatio(
    tags: WMH_BiomeTags,
    weather: WMH_WeatherType,
    day_hour: float
  ): float {
    pref_time!({{
      morning {
        if (underground) += 1.0,
        if (lightlow) += 0.2,
        if (structures) += 1.0,

        if (rain) *= 2.0,
      }

      afternoon {
        if (underground || rain) += 1.0,
        if (lightlow && (vegetation || structures)) += 0.5,
        if (structures) += 1.0,
      }

      night {
        if (structures) += 3.0,
        if (vegetation) += 0.2,
        if (lightlow) += 0.1,
        if (rain) *= 1.2,
      }
    }});
  }

  public function getLocName(): string {
    return GetLocStringByKey("wmh_rotfiend");
  }

  public function onContractCompleted(
    provider: WMH_RewardProvider,
    out contract: WMH_Contract,
    seed: int
  ) {
    super.onContractCompleted(provider, contract, seed);
    provider.appendItem(
      'Bloodmoss',
      (RandNoiseF(seed, 2.0 + contract.level.value * 0.1) as int) + 1
    );
  }
}
