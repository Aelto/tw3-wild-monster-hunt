/// When interacted with:
/// - 
statemachine class WMH_TrapperTools extends WMH_InteractiveObject {
  default object_name_loc_key = 'wmh_trapper_tools';

  private var previous_completed_contracts_count: int;

  public function onAllowedInteraction(
    action: string,
    activator: CEntity
  ) {
    var devices: int = this.getAvailableTrapDevices();
    var containers: int = this.getAvailableLureContainers();

    if (devices + containers <= 0) {
      return WMHHUD("There is nothing to retrieve from these tools");
    }

    this.previous_completed_contracts_count = this.getCompletedContracts();

    var provider: WMH_RewardProvider = new WMH_RewardProvider in this;

    provider.startGroup(this.getObjectName())
      .appendItem('modwmh_trap_device', devices)
      .appendItem('modwmh_lure_container', containers);

    provider.transferItems(thePlayer.GetInventory());
    WMHPOPUP(provider.toHtml(thePlayer.GetInventory()));
  }

  private function getCompletedContracts(): int {
    var storage: WMH_Storage = WMH_getStorage();

    if (!storage) {
      return 0;
    }

    return storage.contract.completed_contracts_count;
  }

  private function getCompletedContractsSinceLastInteraction(): int {
    var previous: int = this.previous_completed_contracts_count;

    return Max(0, this.getCompletedContracts() - previous);
  }

  private function getAvailableTrapDevices(): int {
    return RoundF(this.getCompletedContractsSinceLastInteraction() * 0.2);
  }

  private function getAvailableLureContainers(): int {
    return RoundF(this.getCompletedContractsSinceLastInteraction() * 0.5);
  }
}
