

class WMH_MilestoneContract extends WMH_PendingContract {
  default encounter_tag = "WMH_MilestoneContract";

  private var milestone_level: WMH_Level;

  public function initMilestoneContract(
    bestiary: WMH_Bestiary,
    contract: WMH_Contract
  ): WMH_MilestoneContract {
    this.affix_manager = new WMH_AffixManager in this;
    this.contract = contract;

    this.initFromMilestoneLevel(bestiary, contract.level);

    return this;
  }

  public function isContractExpired(): bool {
    // milestone contracts do not expire
    return false;
  }

  public function getContractSeed(optional offset: int): int {
    return super.getContractSeed(offset)
         - (this.milestone_level.value as int);
  }

  public function toTargetLocNameHtml(): string {
    return "<font color='#FFEE8C'>" + super.toTargetLocNameHtml() + "</font>";
  }

  public function getType(): WMH_PendingContractType {
    return WMH_PendingContractType_MILESTONE;
  }

  public function onContractCompleted() {
    super.onContractCompleted();

    WMHINFO(
      "WMH_MilestoneContract::onContractCompleted(), level = "
      + this.milestone_level.value
    );

    thePlayer.wmh
      .submitOnMilestoneContractCompleted(this, this.getContractSeed());
  }

  private function initFromMilestoneLevel(
    bestiary: WMH_Bestiary, 
    milestone_level: WMH_Level
  ) {

    switch (milestone_level.value) {
      case 0:
        this.target = bestiary.getEntryByBiomeTagByPass('Drowner');
        
        break;
    }

    this.milestone_level = milestone_level;
  }
}