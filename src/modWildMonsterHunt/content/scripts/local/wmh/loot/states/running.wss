state Running in WMH_LootManager {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);
    this.Running_main();
  }

  entry function Running_main() {
    WMHINFO("WMH_LootManagerStateRunning:Running_main()");

    while (parent.loot_requests.Size() > 0) {
      var request: WMH_LootRequest = parent.loot_requests.PopBack();

      this.addLoot(request);
      SleepOneFrame();
    }

    parent.GotoState('Waiting');
  }

  private function addLoot(out request: WMH_LootRequest) {
    var index: int;
    var items_count: int;

    var tags_count: int = request.tags.Size();

    // a small chance decrease as difficulty increases
    var max_chance: float = WMH_difficultyScaleDownF(tags_count + 1, 0.05);

    while (items_count < tags_count) {
      items_count += 1;
      index = RandNoiseF(request.seed, tags_count) as int;
      
      var can_add: bool = RandNoiseF(request.seed + index, max_chance)
                        // the +1 means there is a chance to have 0 items
                        >= 1 + items_count;

      can_add = true;
      if (!can_add) {
        break;
      }

      var category: WMH_LootTag = request.tags[index];

      if (parent.loot_by_category.Size() > (category as int)) {
        this.addRandomItemFromCategory(
          request.inventory,
          category,
          request.seed + index
        );
      }
    }

    if (request.runes_of_power_chance > 0.0) {
      var can_add: bool = RandNoiseF(request.seed + 10, 1.0)
                        <= request.runes_of_power_chance;

      if (can_add) {
        parent.giveRandomRuneOfPower(
          request.inventory,
          request.seed
        );
      }
    }
  }

  private function addRandomItemFromCategory(
    inventory: CInventoryComponent,
    category: WMH_LootTag,
    seed: int
  ) {
    var item: name = parent.getRandomItem(category, seed);

    if (IsNameValid(item)) {
      inventory.AddAnItem(item, 1);
    }
  }
}